type SkillType {
  id: ID!
  name: String!
  description: String!
  contains: [Skill!]!
}

type Skill {
  id: ID!
  name: String!
  description: String!
  type: SkillType!
  tradedIn: [Trade!]!
  createdAt: String!
}

input SkillTypeInput {
  name: String!
  description: String!
}

input SkillInput {
  name: String!
  description: String!
  type: ID!
}

type SkillMutationPayload {
  error: MutationValidationError
  data: Skill
}

type SkillTypeMutationPayload {
  error: MutationValidationError
  data: SkillType
}

type Query {
  skill(description: String!, page: PageInfo!): [Skill!]!
  skillType(id: ID!): SkillType
}

type Mutation {
  createSkillType(input: SkillTypeInput!): SkillTypeMutationPayload
  createSkill(input: SkillInput!): SkillMutationPayload
}